from exploitation_auto_pix_orga import *

test_bibliotheque = True
test_pdf = True

try : 
    import pandas as pd
except:
    print("!!! Bibliothèque pandas absente. Installez la bibliothèque pandas. !!!")
    test_bibliotheque = False

try : 
    from xhtml2pdf import pisa
except:
    print("!!! Bibliothèque xhtml2pdf absente. Pas de sortie pdf possible. Sortie en html !!!")
    test_pdf = False

def liste_emargements(sessions_detail, candidats,sortie_pdf=True):

    texte_HTML=formatageA4portrait(10)
    
    # Ajout de colonnes non informatives, uniquement pour la présentation
    sessions_detail=sessions_detail.assign(Signatures=".")
    candidats=candidats.assign(Tempsmajore = ".", Signature = ".",Coche=".")
    colonnes = {'Tempsmajore':'Temps majoré (O/N)','Coche':'Ecran de fin de test vu (cocher)'}
    candidats.rename(columns = colonnes, inplace = True)
    
    for session_id in sessions_detail['Id Session'] :
        session = sessions_detail[sessions_detail['Id Session']==session_id]
        texte_HTML += "<h2>Feuille d'émargements</h2>"
        texte_HTML += session.loc[:,['Date','Heure','Salle','Surveillants' ]].to_html(index=False)
        texte_HTML += session.loc[:,['Id Session',"Code d'accès",'Nombre de candidats inscrits','Signatures']].to_html(index=False)
        texte_HTML += '<p>Participants</p>'
        candidats_session=candidats[candidats[session_id].notna()]
        candidats_session=candidats_session.loc[:,['Classe','Nom du Participant','Prénom du Participant','Temps majoré (O/N)','Signature','Ecran de fin de test vu (cocher)']]
        texte_HTML += candidats_session.to_html(index=False)
        texte_HTML += '<div style="page-break-before:always">&nbsp;</div>'
        texte_HTML = texte_HTML.replace("<th>Classe</th>","<th style='width:70px;'>Classe</th>")
        texte_HTML = texte_HTML.replace("<th>Date de naissance</th>","<th style='width:70px;'>Date de naissance</th>")
        texte_HTML = texte_HTML.replace("<th>Nom du Participant</th>","<th style='width:210px;'>Nom du Participant</th>")
        texte_HTML = texte_HTML.replace("<th>Prénom du Participant</th>","<th style='width:210px;'>Prénom du Participant</th>")
        
        if sortie_pdf :
            fichier_PDF = open( "Documents-Certif-Auto/Liste d'émargements.pdf", "w+b")
            pisa.CreatePDF(texte_HTML,fichier_PDF)
            fichier_PDF.close()
            
if __name__ == "__main__":
    sortie_html=False
    sortie_pdf=True
    sortie_csv=False
    username,password = donnees_perso()
    
    token_orga,user_id_orga=identification_orga(username,password)
    organisation_id=choix_organisation(token_orga,user_id_orga)

    token_certif,user_id_certif=identification_certif(username,password)
    centre_id=choix_centre(token_certif)

    del username
    del password

    eleves_detail =liste_eleves_detail(token_orga,organisation_id)
    eleves = liste_eleves(eleves_detail)

    resultats_globaux=pd.DataFrame(columns=['Classe','Nom du Participant','Prénom du Participant','Connecté'])

    sessions = liste_sessions(token_certif,centre_id)

    candidats = liste_candidats(token_certif,centre_id,sessions)

    sessions_detail = liste_sessions_detail(sessions,candidats,'certif',sortie_html,sortie_pdf,sortie_csv)

    liste_emargements(sessions_detail, candidats,sortie_pdf)
